{"version":3,"sources":["reportWebVitals.js","components/Skeleton/skeleton.js","Character.js","App.js","components/Skeleton/Location.js","components/Dropdown.js","components/Location.js","components/Header.js","components/Skeleton/skeleton2.js","components/Residents.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","skeleton","className","getCharacter","gql","getCharacters","App","useQuery","loading","data","error","characters","results","map","post","src","image","alt","name","to","id","status","Location","Dropdowns","setFilter","title","type","useState","originalData","setOriginalData","useEffect","length","newArray","locations","slice","DropdownButton","result","Dropdown","Item","eventKey","onSelect","e","getLocation","Locations","activePage","setActivePage","dimension","filter","variables","page","fetchPolicy","Alert","variant","Button","onClick","itemsCountPerPage","totalItemsCount","info","count","pageRangeDisplayed","onChange","pageNumber","Header","Nav","activeKey","Link","href","skeleton2","client","ApolloClient","cache","InMemoryCache","uri","ReactDOM","render","ApolloProvider","StrictMode","path","component","useParams","character","exact","Fragment","location","residents","species","document","getElementById"],"mappings":"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","file":"static/js/main.b31dd51a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport './skeleton.css'\nexport default function skeleton() {\n  return (\n  <div className=\"container mt-5 card-columns d-flex flex-wrap\">\n      <div className=\"card\">\n          <div className=\"content\">\n          <div className=\"skeleton-image\"></div>\n          <div className=\"line\"></div>\n          <div className=\"line\"></div>\n          </div>\n      </div>\n      <div className=\"card\">\n          <div className=\"content\">\n          <div className=\"skeleton-image\"></div>\n          <div className=\"line\"></div>\n          <div className=\"line\"></div>\n          </div>\n      </div>\n      <div className=\"card\">\n          <div className=\"content\">\n          <div className=\"skeleton-image\"></div>\n          <div className=\"line\"></div>\n          <div className=\"line\"></div>\n          </div>\n      </div>\n      <div className=\"card\">\n          <div className=\"content\">\n          <div className=\"skeleton-image\"></div>\n          <div className=\"line\"></div>\n          <div className=\"line\"></div>\n          </div>\n      </div>\n      <div className=\"card\">\n          <div className=\"content\">\n          <div className=\"skeleton-image\"></div>\n          <div className=\"line\"></div>\n          <div className=\"line\"></div>\n          </div>\n      </div>\n      <div className=\"card\">\n          <div className=\"content\">\n          <div className=\"skeleton-image\"></div>\n          <div className=\"line\"></div>\n          <div className=\"line\"></div>\n          </div>\n      </div>\n    </div>\n    )\n}\n\n\n","import React from 'react'\nimport { gql, useQuery } from '@apollo/client';\nimport { useParams } from 'react-router-dom'\nimport Skeleton from './components/Skeleton/skeleton'\n\nconst getCharacter = gql`\n  query getCharacter($id: ID!) {\n    character(id: $id) {\n      id\n      name\n      status\n      species\n      image\n    }\n  }\n`\n\nexport default function Character() {\n  const { id } = useParams()\n  const { loading, data, error } = useQuery(getCharacter, { variables: { id }} )\n  if (loading) return (<Skeleton/>)\n  if (error) return `Error: ${error}`\n  \n  return (\n    <div className=\"App container mt-5\">\n        <div className=\"row justify-content-center\">\n            <div className=\"card\">\n                <div className=\"content\">\n                    <img src={data.character.image} alt={`Imagen de ${data.character.name}`}/>\n                    <h1>{data.character.name}</h1>\n                    <p>{data.character.status}</p>\n                </div>\n            </div>    \n        </div>\n    </div>\n  )\n}","import './App.css';\nimport { gql, useQuery } from '@apollo/client'\nimport { Link } from \"react-router-dom\"\nimport Skeleton from './components/Skeleton/skeleton'\n//  import Location from './components/Skeleton/Location'\nconst getCharacters = gql`\nquery getCharacters {\n  characters {\n    results {\n      id\n      name\n      status\n      image\n    }\n  }\n}\n`\n\nfunction App() {\n  const { loading, data, error } = useQuery(getCharacters)\n if (loading) return (<Skeleton />)\n  if (error) return `Error: ${error}`\n\n  return (\n    <div className=\"App container card-columns\">\n      {data.characters.results.map(post => (\n          <div className=\"card\" key={post.id}>\n            <div className=\"content\">\n              <img src={post.image} alt={`Imagen de ${post.name}`}/>\n              <Link to={`character/${post.id}`}>\n                <h1 className=\"m-2\">{post.name}</h1>\n              </Link>\n              <p>{post.status}</p>\n            </div>\n          </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport './Location.css'\nexport default function Location() {\n  return (\n  <div className=\"container location mt-5 card-columns d-flex flex-wrap\">\n      <div className='location-pagination'>\n          <div className='block'></div>\n          <div className='block'></div>\n          <div className='block'></div>\n          <div className='block'></div>\n          <div className='block'></div>\n          <div className='block'></div>\n          <div className='block'></div>\n          <div className='block'></div>\n          <div className='block'></div>\n      </div>\n      <div className='location-block'>\n          <div className='block1'></div>\n          <div className='block2'></div>\n          <div className='block3'></div>\n          <div className='block4'></div>\n      </div>\n      <div className=\"card-list\">\n            <div className=\"content\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className='line'></div>\n                        <div className='line'></div>\n                    </div>\n                    <div className=\"col\">\n                        <div className='line'></div>\n                        <div className='line'></div>\n                    </div>\n                    <div className=\"col\">\n                        <div className='line'></div>\n                        <div className='line'></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n      <div className=\"card-list\">\n            <div className=\"content\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className='line'></div>\n                        <div className='line'></div>\n                    </div>\n                    <div className=\"col\">\n                        <div className='line'></div>\n                        <div className='line'></div>\n                    </div>\n                    <div className=\"col\">\n                        <div className='line'></div>\n                        <div className='line'></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n      <div className=\"card-list\">\n            <div className=\"content\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className='line'></div>\n                        <div className='line'></div>\n                    </div>\n                    <div className=\"col\">\n                        <div className='line'></div>\n                        <div className='line'></div>\n                    </div>\n                    <div className=\"col\">\n                        <div className='line'></div>\n                        <div className='line'></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n      <div className=\"card-list\">\n            <div className=\"content\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className='line'></div>\n                        <div className='line'></div>\n                    </div>\n                    <div className=\"col\">\n                        <div className='line'></div>\n                        <div className='line'></div>\n                    </div>\n                    <div className=\"col\">\n                        <div className='line'></div>\n                        <div className='line'></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n      <div className=\"card-list\">\n            <div className=\"content\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className='line'></div>\n                        <div className='line'></div>\n                    </div>\n                    <div className=\"col\">\n                        <div className='line'></div>\n                        <div className='line'></div>\n                    </div>\n                    <div className=\"col\">\n                        <div className='line'></div>\n                        <div className='line'></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n      <div className=\"card-list\">\n            <div className=\"content\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className='line'></div>\n                        <div className='line'></div>\n                    </div>\n                    <div className=\"col\">\n                        <div className='line'></div>\n                        <div className='line'></div>\n                    </div>\n                    <div className=\"col\">\n                        <div className='line'></div>\n                        <div className='line'></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n      <div className=\"card-list\">\n            <div className=\"content\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className='line'></div>\n                        <div className='line'></div>\n                    </div>\n                    <div className=\"col\">\n                        <div className='line'></div>\n                        <div className='line'></div>\n                    </div>\n                    <div className=\"col\">\n                        <div className='line'></div>\n                        <div className='line'></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\n\n","import React, { useState, useEffect } from 'react'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Dropdown from 'react-bootstrap/Dropdown'\n\nconst Dropdowns = ({ data, setFilter, title, type }) => {\n    const [originalData, setOriginalData] = useState([])\n\n    useEffect(() => {\n        if (originalData.length === 0 && data) {\n            const newArray = data.locations.results.slice()\n            setOriginalData(newArray)\n        }\n    }, [data, originalData])\n\n    return (\n        <DropdownButton id=\"dropdown-basic-button\" title={title}>\n            {\n                originalData.map(result => (\n                    <Dropdown.Item\n                        eventKey={result[type]}\n                        onSelect={e => setFilter({ [type]: e })}\n                        >\n                        {result[type]}\n                    </Dropdown.Item>\n                ))\n            }\n        </DropdownButton>\n    )\n}\n\nexport default Dropdowns","import React, { useState } from 'react'\nimport { gql, useQuery } from '@apollo/client';\nimport Location from './Skeleton/Location'\nimport Pagination from \"react-js-pagination\";\nimport { Link } from 'react-router-dom'\nimport Dropdown from './Dropdown'\nimport Alert from 'react-bootstrap/Alert'\nimport './Location.css';\nimport Button from 'react-bootstrap/Button'\n\nconst getLocation = gql`\n  query getLocations($page: Int, $filter: FilterLocation)  {\n    locations(page: $page, filter: $filter) {\n      info {\n        pages\n        next\n        prev\n        count\n      }\n      results {\n        id\n        dimension\n        name\n        type\n      }\n    }\n}\n`\n\nfunction Locations() {\n  const [activePage, setActivePage] = useState(1)\n  const [filter, setFilter] = useState({\n    name: '',\n    type: '',\n    dimension: ''\n  })\n\n  const { loading, data, error } = useQuery(getLocation, { variables: { page: activePage, filter }, fetchPolicy: \"network-only\"  })\n\n  const handlePageChange = (pageNumber) => {\n    setActivePage(pageNumber);\n  }\n\n  return (\n    <div className=\"Location container mt-5\">\n        {\n          error && <Alert variant=\"danger\">error</Alert>\n        }\n        <div className=\"d-flex justify-content-center button-filters\">\n          <Dropdown\n            data={data && data}\n            setFilter={setFilter}\n            title=\"Name\"\n            type=\"name\"\n          />\n          <Dropdown\n            data={data && data}\n            setFilter={setFilter}\n            title=\"Type\"\n            type=\"type\"\n          />\n          <Dropdown\n            data={data && data}\n            setFilter={setFilter}\n            title=\"Dimension\"\n            type=\"dimension\"\n          />\n          <Button onClick={() => setFilter({ name: '', type: '', dimension: '' })} variant=\"primary\">Reset Filters</Button>\n        </div>\n      {\n        loading ? (<Location />) : (\n          <div className=\"card-columns justify-content-center\">\n            <div className=\"row my-4\">\n              <Pagination\n                activePage={activePage}\n                itemsCountPerPage={10}\n                totalItemsCount={data && data.locations.info.count}\n                pageRangeDisplayed={5}\n                onChange={handlePageChange}\n              />\n          </div>\n            {\n              data && data.locations.results.map(result => (\n                <div className=\"card-list\">\n                  <div className=\"content\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                        <h3>Name: </h3>\n                        <label>{result.name}</label>\n                      </div>\n                      <div className=\"col\">\n                        <h3>Type: </h3>\n                        <label>{result.type}</label>\n                      </div>\n                      <div className=\"col\">\n                        <h3>Dimension: </h3>\n                        <label>{result.dimension}</label>\n                      </div>\n                      <div className=\"col\">\n                        <Link to={`/residents/${result.id}`}>Residents</Link>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))\n            }\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default Locations;\n","import React from 'react'\nimport { Nav } from 'react-bootstrap'\n\nconst Header = () => (\n    <Nav activeKey=\"/\">\n      <Nav.Item>\n        <Nav.Link href=\"/\">Home</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link href=\"/locations\">Locations</Nav.Link>\n      </Nav.Item>\n    </Nav>\n)\n\nexport default Header\n","import React from 'react'\nimport './skeleton2.css'\nexport default function skeleton2() {\n  return (\n  <div className=\"skeleton2 container mt-5 card-columns d-flex flex-wrap\">\n      <div className='header'>\n            <div className=\"line2\"></div>\n            <div className=\"line3\"></div>\n      </div>\n      <div className=\"card\">\n          <div className=\"content\">\n          <div className=\"skeleton-image\"></div>\n          <div className=\"line\"></div>\n          <div className=\"line\"></div>\n          </div>\n      </div>\n      <div className=\"card\">\n          <div className=\"content\">\n          <div className=\"skeleton-image\"></div>\n          <div className=\"line\"></div>\n          <div className=\"line\"></div>\n          </div>\n      </div>\n      <div className=\"card\">\n          <div className=\"content\">\n          <div className=\"skeleton-image\"></div>\n          <div className=\"line\"></div>\n          <div className=\"line\"></div>\n          </div>\n      </div>\n      <div className=\"card\">\n          <div className=\"content\">\n          <div className=\"skeleton-image\"></div>\n          <div className=\"line\"></div>\n          <div className=\"line\"></div>\n          </div>\n      </div>\n      <div className=\"card\">\n          <div className=\"content\">\n          <div className=\"skeleton-image\"></div>\n          <div className=\"line\"></div>\n          <div className=\"line\"></div>\n          </div>\n      </div>\n      <div className=\"card\">\n          <div className=\"content\">\n          <div className=\"skeleton-image\"></div>\n          <div className=\"line\"></div>\n          <div className=\"line\"></div>\n          </div>\n      </div>\n    </div>\n    )\n}\n\n\n","import React from 'react'\nimport { gql, useQuery } from '@apollo/client';\nimport { useParams } from 'react-router-dom'\nimport Skeleton2 from './Skeleton/skeleton2'\n\nconst getLocation = gql`\n  query getLocation($id: ID!) {\n    location(id: $id) {\n      name\n      dimension\n      residents {\n        name\n        image\n        status\n        species\n        type\n      }\n    }\n  }\n`\n\nexport default function Residents() {\n  const { id } = useParams()\n  const { loading, data, error } = useQuery(getLocation, { variables: { id }, fetchPolicy: \"network-only\"} )\n  if (loading) return (<Skeleton2/>)\n  if (error) return `Error: ${error}`\n  \n  return (\n    <React.Fragment>\n      <div className=\"container-title mt-5\">\n        <h1>{data.location.name}</h1>\n        <h4>{data.location.dimension}</h4>\n      </div>\n      <div className=\"App container card-columns justify-content-center\">\n        {data.location.residents.map(post => (\n            <div className=\"card\" key={post.id}>\n              <div className=\"content\">\n                <img src={post.image} alt={`Imagen de ${post.name}`}/>\n                <h1 className=\"name-resident m-2\">{post.name}</h1>\n                <p>status: {post.status || 'unknown'}</p>\n                <p>specie: {post.species || 'unknown'}</p>\n                <p>type: {post.type || 'unknown'}</p>\n              </div>\n            </div>\n        ))}\n      </div>\n    </React.Fragment>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './components/Skeleton/skeleton.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloProvider, ApolloClient, InMemoryCache } from '@apollo/client';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from \"react-router-dom\"; \nimport Character from './Character'\nimport App from './App'\nimport Locations from './components/Location'\nimport Header from './components/Header'\nimport Residents from './components/Residents'\n\nconst client = new ApolloClient ({\n  cache: new InMemoryCache(),\n\turi: 'https://rickandmortyapi.com/graphql/' \n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <React.StrictMode>\n    <Header />\n    <Router>\n      <Switch>\n        <Route path=\"/character/:id\" component={Character} />\n        <Route exact path=\"/locations\" component={Locations} />\n        <Route exact path=\"/residents/:id\" component={Residents} />\n        <Route exact path=\"/\" component={App} />\n      </Switch>\n    </Router>\n    </React.StrictMode>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}